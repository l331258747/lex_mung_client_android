apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "cn.lex_mung.client_android"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"

//        ndk {
//            //选择要添加的对应 cpu 类型的 .so 库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//        } //这样tbs通过不了 。

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }

//        manifestPlaceholders = [
//                JPUSH_PKGNAME: applicationId,
////                JPUSH_APPKEY : "3d0cc9317f49b07f3a7b7faa", //正式
//                JPUSH_APPKEY : "aa4cfb15e940d5d3e551fea4", //测试
//        ]

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : rootProject.ext.android["isprod"] ? "3d0cc9317f49b07f3a7b7faa" : "aa4cfb15e940d5d3e551fea4", //正式
        ]
    }

    signingConfigs {
        release {
            storeFile file('LexClientKeyStore.keystore')
            storePassword 'a12345679'
            keyAlias 'lexclientkeystore'
            keyPassword 'a12345679'
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "IS_PROD", rootProject.ext.android["isprod"] ? "true" : "false"

//            buildConfigField "boolean", "LOG_DEBUG", "false"
//            buildConfigField "boolean", "USE_CANARY", "false"
//            minifyEnabled false

            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro','proguard.cfg'
            signingConfig signingConfigs.release
        }

        debug {
            buildConfigField "boolean", "IS_PROD", rootProject.ext.android["isprod"] ? "true" : "false"

//            buildConfigField "boolean", "LOG_DEBUG", "true"
//            buildConfigField "boolean", "USE_CANARY", "true"

            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    productFlavors {

        if(rootProject.ext.android["isprod"]){
            prod {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "lex"]
            }
//            toutiao {
//                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "toutiao"]
//            }
//            baidu {
//                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
//            }
//            qq {
//                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qq"]
//            }
//            wx {
//                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wx"]
//            }
        }else{
            dev {
                manifestPlaceholders = [UMENG_CHANNEL_VALUE: "dev"]
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation rootProject.ext.dependencies["androideventbus"]

    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    implementation rootProject.ext.dependencies["BaseAdapter"]
    implementation rootProject.ext.dependencies["Luban"]
    implementation rootProject.ext.dependencies["ucrop"]
    implementation rootProject.ext.dependencies["wheelpicker"]
    implementation rootProject.ext.dependencies["avi"]
    implementation rootProject.ext.dependencies["wechat"]
    implementation rootProject.ext.dependencies["jpush"]
    implementation rootProject.ext.dependencies["jmessage"]
    implementation rootProject.ext.dependencies["jcore"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["bugly"]
    implementation rootProject.ext.dependencies["numberprogressbar"]
    implementation rootProject.ext.dependencies["umeng_common"]
    implementation rootProject.ext.dependencies["umeng_analytics"]
    implementation rootProject.ext.dependencies["amap-location"]
    implementation rootProject.ext.dependencies["amap-search"]
    implementation rootProject.ext.dependencies["amap"]

    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["paginate"]

    //arms
    implementation project(':zl_mvp')
    implementation project(':imageloader-glide')
    implementation project(':banner')
    implementation project(':rxdownload3')

    implementation(name: 'alipaySdk-15.5.9-20181123210601', ext: 'aar')

    //test
    testImplementation rootProject.ext.dependencies["junit"]
}

